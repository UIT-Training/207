package cn.gongly.server.model;
/**
 * QQ服务器,它在监听,等待
 * @author MSI
 *
 */
import java.net.*;
import java.io.*;
import java.util.*;

import cn.gongly.common.Massage;
import cn.gongly.common.User;

public class MyQqServer {
	
	
	
	public MyQqServer() {
		
		try {
			//监听
			System.out.println("我是服务器在9999监听");
			ServerSocket ss = new ServerSocket(9999);
			//阻塞,等待连接
			while(true){
			Socket s=ss.accept();
			
			//接收客户端的信息
			
			//BufferedReader br = new BufferedReader(new InputStreamReader(s.getInputStream()));
			//String info =br.readLine();
			ObjectInputStream ois=new ObjectInputStream(s.getInputStream());
			User u =(User)ois.readObject();
			
			Massage m = new Massage();
			
			ObjectOutputStream oos = new ObjectOutputStream(s.getOutputStream());
			if(u.getPasswd().equals("123456")){
				//成功
				System.out.println("服务器接收到用户:"+u.getUserID()+" 密码:"+u.getPasswd());
				m.setMesType("1");
				oos.writeObject(m);
				
				//这里单开一个线程,与客户端保持通讯
				ServerConClientThread scct = new ServerConClientThread(s);
				ManageClientThread.addClientThread(u.getUserID(), scct);
				scct.start();
				
				//通知其他在线用户
				scct.notifyOther(u.getUserID());
				
			}
			else{
				m.setMesType("2");
				oos.writeObject(m);
				//guanbi 
				s.close();
			}
			

			
			}
		} catch (Exception e) {
			e.printStackTrace();
			// TODO: handle exception
		}finally{
			
		}
	}
}
